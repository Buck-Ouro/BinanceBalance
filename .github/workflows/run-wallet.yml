name: Wallet Balance Extraction

on:
  schedule:
    - cron: '45 23 * * *'  # Runs daily at 7:45 AM (UTC+8)

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      GCP_CREDENTIALS_PATH: /tmp/gcp_credentials.json
      PYTHON_VERSION: '3.10'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cryptography gspread oauth2client requests
          python -m pip cache purge

      - name: Configure Google Sheets credentials
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$GCP_SERVICE_ACCOUNT_KEY" > "$GCP_CREDENTIALS_PATH"
          chmod 600 "$GCP_CREDENTIALS_PATH"

      - name: Execute Binance balance extraction
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS_PATH }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          PROXY_HTTP: ${{ secrets.PROXY_HTTP }}
          PROXY_HTTPS: ${{ secrets.PROXY_HTTPS }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
          SHEET_NAME: "Sheet1"
        run: python binance_script.py

      - name: Execute Bybit balance extraction
        if: success()
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS_PATH }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          PROXY_HTTP: ${{ secrets.PROXY_HTTP }}
          PROXY_HTTPS: ${{ secrets.PROXY_HTTPS }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
          SHEET_NAME: "Sheet2"
        run: python bybit_script.py

      - name: Security cleanup
        if: always()
        run: |
          # Securely remove credentials file
          if [ -f "$GCP_CREDENTIALS_PATH" ]; then
            shred -u "$GCP_CREDENTIALS_PATH"
          fi
          
          # Terminate any remaining Python processes
          pkill -f "python.*script" || true
          echo "Cleanup completed successfully"
